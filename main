import tkinter as tk #для окна выбора файлов
from tkinter import filedialog # выбор файлов
import pygame #само окно
import cv2 # для преобразования
import time
#необходимо установить pygame+cv2

# Выбор файлов
def select_files():
    video = filedialog.askopenfilename(title="Выберите видео", filetypes=[("MP4 files", "*.mp4")])
    audio = filedialog.askopenfilename(title="Выберите аудио", filetypes=[("MP3 files", "*.mp3")])

    return video, audio

# окно выбора
root = tk.Tk()
root.title("Выбор файлов")

# Label to show message if files are not selected
info_label = tk.Label(root, text="Выберите файлы: 1 - видео, 2 - аудио(аудио необязательно)", font=("Arial", 12))
info_label.pack(pady=20)

# проверка выбора и само видео
def start_animation():
    video, audio = select_files()

    if video:  # если только видео
        info_label.config(text="Видео выбрано.Запуск...(нажмите выбор для смены файлов)", fg="green")
        root.update()  

        # инит
        pygame.init()
        pygame.font.init()
        chars = " .'^\",:;Il!i><~+_-?][}{1)(|\\/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&8%B@$"  # палитра
        screen = pygame.display.set_mode((0, 0), pygame.FULLSCREEN)  # фуллскрин
        screen_width, screen_height = screen.get_size()
        pygame.display.set_caption("ASCII")
        pygame.mixer.init()

        # размеры шрифта
        font_sizes = [1, 5, 10, 15, 20, 25, 30]

        # Font size selection menu
        def font_menu():
            menu_running = True
            selected_index = 0
            menu_font = pygame.font.SysFont("Courier", 30)  # шрифт меню

            while menu_running:
                screen.fill((0, 0, 0))
                title_text = menu_font.render("Выберите размер(чем меньше тем больше детализация но дольше загрузка). ", True, (255, 255, 255)) 
                controls_text = menu_font.render("Стрелки вверх и вниз для смены, Enter для выбора. ESC после загрузки чтобы закрыть окно.", True, (255, 255, 255))
                warning_text = menu_font.render("ПРИМЕЧАНИЕ:размер 1 может не работать на вашем устройстве", True, (255, 255, 255))
                screen.blit(title_text, (screen_width // 2 - title_text.get_width() // 2, 100))
                screen.blit(controls_text, (screen_width // 2 - controls_text.get_width() // 2, 150))
                screen.blit(warning_text, (screen_width // 2 - warning_text.get_width() // 2, 200))

                for i, size in enumerate(font_sizes):
                    color = (255, 255, 0) if i == selected_index else (255, 255, 255)
                    option_text = menu_font.render(f"{i + 1}. Размер - {size}", True, color)
                    screen.blit(option_text, (screen_width // 2 - option_text.get_width() // 2, 300 + i * 50))

                pygame.display.flip()

                for event in pygame.event.get():
                    if event.type == pygame.QUIT:
                        pygame.quit()
                        exit()
                    if event.type == pygame.KEYDOWN:
                        if event.key == pygame.K_UP:
                            selected_index = (selected_index - 1) % len(font_sizes)
                        elif event.key == pygame.K_DOWN:
                            selected_index = (selected_index + 1) % len(font_sizes)
                        elif event.key in [pygame.K_1, pygame.K_2, pygame.K_3, pygame.K_4]:
                            selected_index = event.key - pygame.K_1
                        elif event.key == pygame.K_RETURN:
                            menu_running = False

            return font_sizes[selected_index]

        # загрузка
        def show_progress_bar(progress, total):
            bar_width = screen_width * 0.6
            bar_height = 50
            x = (screen_width - bar_width) // 2
            y = (screen_height - bar_height) // 2
            screen.fill((0, 0, 0))

            pygame.draw.rect(screen, (255, 255, 255), (x, y, bar_width, bar_height), 2)
            # прогресс
            fill_width = int((progress / total) * bar_width)
            pygame.draw.rect(screen, (255, 255, 255), (x, y, fill_width, bar_height))

            # Display percentage
            progress_text = pygame.font.SysFont("Courier", 30).render(f"Загрузка... {int((progress / total) * 100)}%", True, (255, 255, 255))
            screen.blit(progress_text, (screen_width // 2 - progress_text.get_width() // 2, y + bar_height + 10))

            pygame.display.flip()

        font_size = font_menu()
        font = pygame.font.SysFont("Courier", font_size)
        char_width, char_height = font.size("A")
        output = (screen_width // char_width, screen_height // char_height)

        # преобразование в аски
        def frame_to_ascii(frame):
            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
            frame = cv2.resize(frame, output)
            ascii_frame = []
            for row in frame:
                line = "".join(chars[int(pixel) * (len(chars) - 1) // 255] for pixel in row)
                ascii_frame.append(line)
            return ascii_frame

        # загрузка кадров
        cap = cv2.VideoCapture(video)
        timestamps = []
        frames = []
        frame_count = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))

        for i in range(frame_count):
            ret, frame = cap.read()
            if not ret:
                break
            ascii_frame = frame_to_ascii(frame)
            frames.append(ascii_frame)
            timestamps.append(cap.get(cv2.CAP_PROP_POS_MSEC) / 1000.0)  # добавление кадров
            show_progress_bar(i + 1, frame_count)

        cap.release()

        # аудио + видео
        def audio_anim():
            if audio:
                pygame.mixer.music.load(audio)
                pygame.mixer.music.play()
            start_time = time.time()
            frame_index = 0
            running = True

            while running:
                for event in pygame.event.get():
                    if event.type == pygame.QUIT:
                        return False
                    if event.type == pygame.KEYDOWN:
                        if event.key == pygame.K_ESCAPE:  # кнопка выхода
                            pygame.quit()
                            return False

                screen.fill((0, 0, 0))

                if frame_index < len(frames):  # проверка кадров
                    for y, line in enumerate(frames[frame_index]):
                        text = font.render(line, True, (255, 255, 255))
                        screen.blit(text, (0, y * char_height))
                    pygame.display.flip()

                    # проверка фпс
                    current_time = time.time() - start_time
                    if frame_index < len(timestamps) - 1:
                        next_frame_time = timestamps[frame_index + 1]
                        delay = max(0, next_frame_time - current_time)
                        time.sleep(delay)
                    frame_index += 1
                else:
                    break  # остановить если все кадры преобразовали

            return True

        # запуск
        while True:
            if not audio_anim():  # анимация без аудио
                break

        pygame.mixer.music.stop()
        pygame.quit()

    else:
        info_label.config(text="Выберите хотя бы видеофайл!", fg="red")

# кнопка для выбора
start_button = tk.Button(root, text="Выбрать", font=("Arial", 14), command=start_animation)
start_button.pack(pady=10)

# запуск окна
root.mainloop()
